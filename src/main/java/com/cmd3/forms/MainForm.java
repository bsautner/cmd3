package com.cmd3.forms;

import com.cmd3.CommandProcessor;
import com.cmd3.ConsoleCallback;
import com.cmd3.ConsoleListener;
import com.cmd3.ConsoleManager;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.jetbrains.annotations.NotNull;

import javax.swing.*;
import javax.swing.text.*;
import java.awt.*;

public class MainForm {
    private JTextArea console;
    private JPanel rootPanel;
    private JFormattedTextField statusBar;
    private final ConsoleManager consoleManager;

    public MainForm() {
        StyleContext sc = new StyleContext();
        $$$setupUI$$$();
        final Style redStyle = sc.addStyle("RED", null);
        redStyle.addAttribute(StyleConstants.Foreground, Color.red);
        redStyle.addAttribute(StyleConstants.FontSize, new Integer(16));

        final Style blueStyle = sc.addStyle("BLUE", null);
        blueStyle.addAttribute(StyleConstants.Foreground, Color.blue);
        blueStyle.addAttribute(StyleConstants.FontSize, new Integer(14));
        blueStyle.addAttribute(StyleConstants.Bold, new Boolean(true));


        final DefaultStyledDocument doc = new DefaultStyledDocument(sc);

        console.setDocument(doc);
        console.setAutoscrolls(true);
        console.getDocument().addDocumentListener(new ConsoleListener());
        console.addKeyListener(new CommandProcessor(new ConsoleCallback() {

//        mainText.autoscrolls = true
//        mainText.background = Color.BLACK
//        val font = Font("Default", Font.BOLD, 18)
//        mainText.font = font
//        mainText.foreground = Color.BLUE

            @Override
            public void print(@NotNull String output) {


                // Finally, apply the style to the heading
                int start = console.getText().length();

                // Add the text to the document
                try {
                    console.getDocument().insertString(start, output, blueStyle);
                    console.moveCaretPosition(console.getText().length());
                    console.select(console.getText().length(), console.getText().length());
                    console.grabFocus();

                } catch (BadLocationException e) {
                    e.printStackTrace();
                }
            }


            @Override
            public void setTitle(@NotNull String value) {
                statusBar.setText(value);
            }

            @Override
            public void prompt(boolean enter) {
                consoleManager.prompt(enter);
            }

        }));
        consoleManager = new ConsoleManager(console);
        consoleManager.prompt(false);
    }

    public static void main(String[] args) {

        MainForm form = new MainForm();
        form.resume();

    }

    private void resume() {
        JFrame frame = new JFrame("MainForm");
        frame.setContentPane(new MainForm().rootPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
        frame.setLocationRelativeTo(null);


    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        rootPanel.setPreferredSize(new Dimension(1200, 800));
        final JToolBar toolBar1 = new JToolBar();
        rootPanel.add(toolBar1, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 20), null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        rootPanel.add(panel1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        console = new JTextArea();
        console.setFocusCycleRoot(true);
        console.setFocusable(true);
        console.setForeground(new Color(-14272026));
        console.setText("");
        scrollPane1.setViewportView(console);
        statusBar = new JFormattedTextField();
        rootPanel.add(statusBar, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }


}
